//================================================================================================//
//                                                                                                //
// PROJET       : DongleWifi GoodRace                                                             //
// MODULE       : Board                                                                           //
// DESCRIPTION  :                                                                                 //
// CREATION     : 27/01/2020                                                                      //
// HISTORIQUE   :                                                                                 //
//                                                                                                //
//================================================================================================//

//================================================================================================//
//                                        FICHIERS INCLUS                                         //
//================================================================================================//

#include "./console.h"
#include <scheduler.h>

//================================================================================================//
//                                            DEFINES                                             //
//================================================================================================//

//================================================================================================//
//                                          ENUMERATIONS                                          //
//================================================================================================//

//================================================================================================//
//                                      STRUCTURES ET UNIONS                                      //
//================================================================================================//

////////////////////////////////////////////////////////////////////////////////////////////////////
//                                 VARIABLES PRIVEES ET PARTAGEES                                 //
////////////////////////////////////////////////////////////////////////////////////////////////////

//------------------------------------------------------------------------------------------------//
//---                                         Privees                                          ---//
//------------------------------------------------------------------------------------------------//

//------------------------------------------------------------------------------------------------//
//---                                        Partagees                                         ---//
//------------------------------------------------------------------------------------------------//

////////////////////////////////////////////////////////////////////////////////////////////////////
//                                 FONCTIONS PRIVEES ET PARTAGEES                                 //
////////////////////////////////////////////////////////////////////////////////////////////////////

//------------------------------------------------------------------------------------------------//
//---                                         Privees                                          ---//
//------------------------------------------------------------------------------------------------//

//------------------------------------------------------------------------------------------------//
//---                                        Partagees                                         ---//
//------------------------------------------------------------------------------------------------//

//--------------------------------------------------------------------------------------------------
// FONCTION    : CONSOLE_TaskInit
//
// DESCRIPTION : Initialisation de la carte : GPIO, Clocks, Interruptions...
//--------------------------------------------------------------------------------------------------
bool CONSOLE_TaskInit(void)
{
    return true;
}

void CONSOLE_TaskRun(void)
{
    uint32_t i, j;
    uint16_t len;

    SERIAL_PrintString("Task");
    for (j = 4; j < 16; j++)
    {
        SERIAL_PrintString(" ");
    }
    SERIAL_PrintString("State  Pri  #  cpu  ");
    SERIAL_PrintString("\r\n");

    SERIAL_PrintString("----------------------------------------------");

    SERIAL_PrintString("\r\n");

    for ( i = 0 ; i < MAX_TASKS ; i++ ){
        if ( tasks[i].idx != NULL ){
            /* nom de la tache */
			len = strlen(tasks[i].name.c_str());
			SERIAL_PrintString(tasks[i].name);
			for ( j = len ; j < 16 ; j++)
			{
				SERIAL_PrintString(" ");
			}

			/* état de la tache */
			switch ( tasks[i].status )
			{
				case ( NO_STATUS ):		SERIAL_PrintString("NO     "); break;
				case ( INIT_STATUS ):	SERIAL_PrintString("INIT   "); break;
				case ( WAITING_STATUS ):SERIAL_PrintString("WAIT   "); break;
				case ( READY_STATUS ):	SERIAL_PrintString("READY  "); break;
				case ( RUNNING_STATUS ):SERIAL_PrintString("RUN    "); break;
				case ( END_RUN_STATUS ):SERIAL_PrintString("END    "); break;
			}

			/* priorité */
			SERIAL_PrintString("0     ");

			/* numéros de la tache */
			SERIAL_PrintString(String(tasks[i].idx) + "  ");

			/* utilisation CPu */
			float percent = (float)((float)tasks[i].totalTickUsed / (float)millis())*100.0 ;

			if ( percent < 1.0 )
				SERIAL_PrintString("<1%% ");
			else
				SERIAL_PrintString(String(percent) + " ");

			SERIAL_PrintString("\r\n");
        }
    }
    SERIAL_PrintString("\r\n");
    SERIAL_PrintString("\r\n");
}